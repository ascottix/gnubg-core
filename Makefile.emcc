CC = emcc
CFLAGS = -Wall -Wextra -O2
CFLAGS += -Isrc -Isrc/lib
CFLAGS += -Wno-unused-parameter

LDFLAGS += -s WASM=1 -s EXPORTED_RUNTIME_METHODS='["ccall", "cwrap", "UTF8ToString"]'
LDFLAGS += -s EXPORT_NAME="createGnubgCoreModule" -s MODULARIZE=1 -s EXPORT_ES6
LDFLAGS += -s EXPORTED_FUNCTIONS='["_init", "_hint", "_shutdown", "_free"]'
LDFLAGS += -s STACK_SIZE=1048576
LDFLAGS += -s ALLOW_MEMORY_GROWTH=1
LDFLAGS += -s INITIAL_MEMORY=67108864

JSMODULE = gnubg-core.js

OBJDIR = obj_emcc
DISTDIR = dist

SRC := $(shell find src -name '*.c')
OBJ := $(patsubst src/%.c,$(OBJDIR)/%.o,$(SRC))

# Target
TARGET = gnubg-core-module

.PHONY: all clean

all: $(DISTDIR)/$(TARGET).js $(DISTDIR)/$(JSMODULE)

$(DISTDIR):
	mkdir -p $(DISTDIR)

$(DISTDIR)/$(TARGET).js: $(OBJ) | $(DISTDIR)
	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ --preload-file data $(OBJ)

$(DISTDIR)/$(JSMODULE): web/$(JSMODULE) | $(DISTDIR)
	cp $< $@

# Compile .c in .o
$(OBJDIR)/%.o: src/%.c
	@mkdir -p $(dir $@)
	$(CC) $(CFLAGS) -c $< -o $@

clean:
	rm -rf $(OBJDIR) $(DISTDIR)
